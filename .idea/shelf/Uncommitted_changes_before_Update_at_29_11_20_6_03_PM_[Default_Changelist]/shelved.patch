Index: app/src/androidTest/java/cmput301/team19/lendz/LoginActivityTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cmput301.team19.lendz;\n\nimport android.widget.EditText;\nimport android.widget.ListView;\n\nimport androidx.test.platform.app.InstrumentationRegistry;\nimport androidx.test.rule.ActivityTestRule;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationItemView;\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.robotium.solo.Solo;\n\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.Rule;\nimport org.junit.Test;\n\nimport static androidx.test.internal.util.Checks.checkNotNull;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\n\n/**\n *Test class for LoginActivity. All the UI tests are written here. Robotium test framework is\n * used\n */\npublic class LoginActivityTest {\n    private Solo solo;\n\n    @Rule\n    public ActivityTestRule<LoginActivity> rule =\n            new ActivityTestRule<>(LoginActivity.class, true, true);\n\n    @BeforeClass\n    public static void signOut() {\n        // Start signed out\n        FirebaseAuth.getInstance().signOut();\n    }\n\n    /**\n     *Runs before all tests and creates solo instance.\n     * @throws Exception\n     */\n    @Before\n    public void setUp() throws Exception {\n        solo = new Solo(InstrumentationRegistry.getInstrumentation(),rule.getActivity());\n    }\n\n\n    /**\n     * tests if user successfully Logs in and logs them out\n     */\n    @Test\n    public void testLogin() throws InterruptedException {\n        //\u200BAsserts that the current activity is the LoginActivity. Otherwise, show \"Wrong Activity\"\n        solo.assertCurrentActivity(\"Wrong Activity\",LoginActivity.class);\n\n        //Get view for email EditText and enter email\n        solo.enterText((EditText) solo.getView(R.id.editText_login_email),\"bayo@gmail.com\");\n        //Get view for password EditText and enter password\n        solo.enterText((EditText) solo.getView(R.id.editText_login_password),\"123456\");\n\n        /**True if there is a text: bayo@gmail.com on the screen, wait at least 2 seconds and find\n         minimum one match. */\n        assertTrue(solo.waitForText(\"bayo@gmail.com\",1,2000));\n        //Click on login button\n        solo.clickOnButton(\"LOGIN\");\n\n        //\u200BAsserts that the current activity is the SignUp. Otherwise, show \"Wrong Activity\"\n        solo.assertCurrentActivity(\"Wrong Activity\",MainActivity.class);\n\n        //Get the bottom navigation bar\n        final BottomNavigationView navigationBar = (BottomNavigationView) solo.getView(R.id.bottomNav);\n\n        //Go to user profile\n        solo.clickOnView(navigationBar.findViewById(R.id.profile));\n\n        //Click of LogOut\n        solo.clickOnButton(\"Log Out\");\n\n        //\u200BAsserts that the current activity is the LoginActivity Otherwise, show \"Wrong Activity\"\n        solo.assertCurrentActivity(\"Wrong Activity\",LoginActivity.class);\n\n    }\n\n\n    /**\n     * Closes the activity after each test\n     * @throws Exception\n     */\n    @After\n    public void tearDown() throws Exception{\n        solo.finishOpenedActivities();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/cmput301/team19/lendz/LoginActivityTest.java	(revision 99faee1a4fe31e6190d09a5723a00c002ff3131e)
+++ app/src/androidTest/java/cmput301/team19/lendz/LoginActivityTest.java	(date 1606680309000)
@@ -36,6 +36,7 @@
     public static void signOut() {
         // Start signed out
         FirebaseAuth.getInstance().signOut();
+
     }
 
     /**
Index: app/src/androidTest/java/cmput301/team19/lendz/ViewRequestTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cmput301.team19.lendz;\n\nimport androidx.test.espresso.Espresso;\nimport androidx.test.espresso.NoMatchingViewException;\nimport androidx.test.espresso.action.ViewActions;\nimport androidx.test.espresso.contrib.ActivityResultMatchers;\nimport androidx.test.espresso.contrib.RecyclerViewActions;\nimport androidx.test.espresso.matcher.ViewMatchers;\nimport androidx.test.ext.junit.rules.ActivityScenarioRule;\nimport androidx.test.ext.junit.runners.AndroidJUnit4;\nimport androidx.test.rule.ActivityTestRule;\n\nimport com.google.firebase.auth.FirebaseAuth;\n\nimport org.hamcrest.Matchers;\nimport org.junit.Before;\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport static android.service.autofill.Validators.not;\nimport static androidx.test.espresso.Espresso.onData;\nimport static androidx.test.espresso.Espresso.onView;\nimport static androidx.test.espresso.action.ViewActions.clearText;\nimport static androidx.test.espresso.action.ViewActions.click;\nimport static androidx.test.espresso.action.ViewActions.typeText;\nimport static androidx.test.espresso.assertion.ViewAssertions.matches;\nimport static androidx.test.espresso.matcher.RootMatchers.withDecorView;\nimport static androidx.test.espresso.matcher.ViewMatchers.hasDescendant;\nimport static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\nimport static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;\nimport static androidx.test.espresso.matcher.ViewMatchers.withId;\nimport static androidx.test.espresso.matcher.ViewMatchers.withText;\nimport static com.google.common.base.CharMatcher.is;\nimport static org.hamcrest.Matchers.anything;\nimport static org.hamcrest.Matchers.startsWith;\n\n@RunWith(AndroidJUnit4.class)\n\npublic class ViewRequestTest {\n    private String QUERY_STRING = \"Expresso\";\n    @Rule\n    public ActivityScenarioRule<MapsActivity> rule =\n            new ActivityScenarioRule<>(MapsActivity.class);\n    @Rule\n    public ActivityTestRule<MapsActivity> mActivityTestRule = new ActivityTestRule<>(MapsActivity.class);\n\n    @Before\n    public void logUserIn() throws Exception {\n        // Ensure started logged out\n        FirebaseAuth.getInstance().signOut();\n\n        onView(withId(R.id.editText_login_email))\n                .perform(clearText())\n                .perform(typeText(\"who@you.com\"));\n\n        onView(withId(R.id.editText_login_password))\n                .perform(clearText())\n                .perform(typeText(\"1234567\"), ViewActions.closeSoftKeyboard());\n        onView(withId(R.id.login_button))\n                .perform(click());\n        Thread.sleep(3000);\n\n    }\n    /**\n     * Begins the activity for the search\n     * Makes a search and awaits the results\n     *\n     */\n    @Test\n    public void acceptRequest() throws InterruptedException {\n        onView(withId(R.id.search_item)).perform(click());\n        Thread.sleep(2000);\n        onView(withId(R.id.search_edit)).perform(typeText(QUERY_STRING),ViewActions.closeSoftKeyboard());\n        Thread.sleep(2000);\n        onView(withId(R.id.search_button)).perform(click());\n        Thread.sleep(2000);\n        onView(withId(R.id.search_recyclerview)).\n                perform(RecyclerViewActions.actionOnItemAtPosition(0, click()));\n        Thread.sleep(2000);\n        //check if view requests button is in view\n        try {\n            onView(withId(R.id.view_requests_button))\n                    .check(matches(withText(\"VIEW REQUESTS\")));\n            onView(withId(R.id.view_requests_button)).perform(click());\n            //navigate to list view\n            onData(anything()).inAdapterView(withId(R.id.requestListView)).onChildView(withId(R.id.acceptRequest)).atPosition(0).perform(click());\n            Thread.sleep(2000);\n            onView(withText(\"Accept Book Request\")).check(matches(isDisplayed()));\n            Thread.sleep(2000);\n            onView(withId(android.R.id.button1)).perform(click());\n            Thread.sleep(2000);\n            //open map activity\n            onView(withId(android.R.id.button1)).perform(click());\n            onView(withId(R.id.input_search)).perform(click());\n            Thread.sleep(2000);\n\n        }catch (NoMatchingViewException ignore) {\n            //no matching view exception\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/cmput301/team19/lendz/ViewRequestTest.java	(revision 99faee1a4fe31e6190d09a5723a00c002ff3131e)
+++ app/src/androidTest/java/cmput301/team19/lendz/ViewRequestTest.java	(date 1606608571000)
@@ -92,6 +92,7 @@
             Thread.sleep(2000);
             //open map activity
             onView(withId(android.R.id.button1)).perform(click());
+            Thread.sleep(2000);
             onView(withId(R.id.input_search)).perform(click());
             Thread.sleep(2000);
 
